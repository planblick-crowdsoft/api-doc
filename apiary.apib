FORMAT: 1A
HOST: https://api.planblick.com

# planBLICK API

The planBLICK API is a mostly json based API allowing consumers to 
build their completely own frontend for planBLICK applications.

# Group Account and login-management

IMPORTANT: The planBLICK API separates between "Account" and "Login" 
where "Account" (also frequently referred to as "consumer") is sort of a container for n logins. Think of an "Account"
as something a company has one, where logins is something each employee
of the company has one. During the account-registration, a corresponding 
login is created automatically.

## Registration [/registration]
### Starts registration process [POST]
planBLICK JS-Framework Example: [Codepen](https://codepen.io/planBLICK/pen/xxEEgjx)


+ Request

    + Headers

            content-type: application/json

    + Body
    
            {
                "username": "info@planblick.com",
                "password": "secretpassword"
            }

+ Response 200
    + Headers

            content-type: text/plain


    + Body
            
            {
                "taskid": "d87d4cc9-f88f-4260-be6e-4601baf71927"
            }

## Getting an apikey [/login]
### Perform Basic-Auth to obtain an apikey [GET]
planBLICK JS-Framework Examples: 

[Get apikey only](https://codepen.io/planBLICK/pen/NWRRpBV) if you only want to get the apikey in a pure programmatical way


[Perform login ](https://codepen.io/planBLICK/pen/ZEppegB) if you only want to create a form and let the framework do the heavy lifting. In this case your login-form need two input fields with id's "login" and "password". The function will pull out the data itself, do the request and set some cookies which are most commonly used with the api.


+ Request

    + Headers

            content-type: application/json
            Authorization: Basic ABC123

    + Body
    
+ Response 403

    + Headers

            content-type: application/json

    + Body

            {
                "message": "Invalid authentication credentials"
            }

+ Response 200

    + Headers

            content-type: application/json

    + Body

            {
                "apikey": "randomApiKey",
                "consumer_id": "consumer_id of account the login belongs to",
                "consumer_name": "name of the account the login belongs to",
                "created_at": creation_unixtimestamp,
                "id": "internal id of the apikey",
                "username": "loopback of the used login for the Basic-Auth"
            }

## Add Login **ASYNC** [/newlogin]
### Create a new login for an account [POST]
Creates a new login within the account the apikey belongs to which
is used during the request.

planBLICK JS-Framework Example: 

In [Codepen-Example](https://codepen.io/planBLICK/pen/XWjjazd) make sure to perform login first, then add login


+ Request

    + Headers

            content-type: application/json
            apikey: myapikey

    + Body
    
            {
                "username": "foobar2",
                "password": "mysecretpassword"
            }

+ Response 403

    + Headers

            content-type: application/json

    + Body

            {
                "message": "Invalid authentication credentials"
            }

+ Response 200

    + Headers

            content-type: application/json

    + Body

            {
                "taskid": "d87d4cc9-f88f-4260-be6e-4601baf71927"
            }

## Start lost password process [/init_credentials_lost_process]
### Sends out a mail with a password reset link [POST]

[Codepen-Example](https://codepen.io/planBLICK/pen/abmmLYK) 

+ Request

    + Headers

            content-type: application/json
            apikey: myapikey

    + Body
    
            {
                "username": "florian.kroeber@planblick.com"
            }

+ Response 404

    + Headers

            content-type: application/json

    + Body

            {
                "result": "login not found"
            }

+ Response 400

    + Headers

            content-type: application/json

    + Body

            {
                "result": "Resetting password not possible, please contact support", 
                "error_code": "key not obtainable"
            }

+ Response 200

    + Headers

            content-type: application/json

    + Body

            {
                "result": true
            }

## Delete a login **ASYNC** [/es/cmd/deleteLogin]
### Deletes a login [POST]
[Codepen-Example](https://codepen.io/planBLICK/pen/ExggbxO) 

The calling login needs to have sufficient permissions 
to delete the login in question. The deletion happens asynchronously,
so it may be that the login remains for a while (although usually the 
deletion happens within in milliseconds). There's no check whether 
the given login exists, if not, the call will simply do nothing, so 
make sure you send the right login name.

+ Request

    + Headers

            content-type: application/json
            apikey: myapikey

    + Body
    
            {
                "username": "florian.kroeber@planblick.com"
            }

+ Response 403

    + Headers

            content-type: application/json

    + Body

            {
                "message": "Invalid authentication credentials"
            }

+ Response 200

    + Headers

            content-type: application/json

    + Body

            {
                "task_id": "311d7579-abac-44ad-b12a-9bd51389cc9d"
            }

## Delete an account **ASYNC** [/es/cmd/deleteAccount]
### Deletes an account [POST]
[Codepen-Example](https://codepen.io/planBLICK/pen/BaLLmLW) 


The calling login needs to have sufficient permissions 
to delete the account in question. The deletion happens asynchronously,
so it may be that the account remains for a while (although usually the 
deletion happens within in milliseconds). There's no check whether 
the given account exists, if not, the call will simply do nothing, so 
make sure you send the right login name.

+ Request

    + Headers

            content-type: application/json
            apikey: myapikey

    + Body
    
            {
                "id": "c001247b-3a3d-45c6-b9bd-e671917fe4c5"
            }

+ Response 403

    + Headers

            content-type: application/json

    + Body

            {
                "message": "Invalid authentication credentials"
            }

+ Response 200

    + Headers

            content-type: application/json

    + Body

            {
                "task_id": "311d7579-abac-44ad-b12a-9bd51389cc9d"
            }
